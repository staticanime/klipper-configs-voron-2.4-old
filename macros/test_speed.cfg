[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(100)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set start_accel = params.START_ACCEL|default(500)|int %}
    {% set end_accel  = params.END_ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    {% set accel_step = params.ACCEL_STEP|default(100)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = params.SMALLPATTERNSIZE|default(20)|int %}
 
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
        
    # Home and get position for comparison later:
        CG28
        CQGL
        G28 X Y
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION
        
    # Perform tests 
    {% for i in range(((end_accel - start_accel)/accel_step + 1)|int) %}
    
        # Go to starting position
        G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

        # Set new limits
        SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={start_accel + accel_step * i} ACCEL_TO_DECEL={((start_accel + accel_step * i)/2)|int} 
        { action_respond_info("Test start for {start_accel + accel_step * i} mm/s^2, at {speed} mm/s") }

        {% for i in range(iterations) %}
            # Large pattern
                # Diagonals
                G0 X{x_min} Y{y_min} F{speed*60}
                G0 X{x_max} Y{y_max} F{speed*60}
                G0 X{x_min} Y{y_min} F{speed*60}
                G0 X{x_max} Y{y_min} F{speed*60}
                G0 X{x_min} Y{y_max} F{speed*60}
                G0 X{x_max} Y{y_min} F{speed*60}
                
                # Box
                G0 X{x_min} Y{y_min} F{speed*60}
                G0 X{x_min} Y{y_max} F{speed*60}
                G0 X{x_max} Y{y_max} F{speed*60}
                G0 X{x_max} Y{y_min} F{speed*60}

            # Small pattern
                # Small diagonals 
                G0 X{x_center_min} Y{y_center_min} F{speed*60}
                G0 X{x_center_max} Y{y_center_max} F{speed*60}
                G0 X{x_center_min} Y{y_center_min} F{speed*60}
                G0 X{x_center_max} Y{y_center_min} F{speed*60}
                G0 X{x_center_min} Y{y_center_max} F{speed*60}
                G0 X{x_center_max} Y{y_center_min} F{speed*60}
                
                # Small box
                G0 X{x_center_min} Y{y_center_min} F{speed*60}
                G0 X{x_center_min} Y{y_center_max} F{speed*60}
                G0 X{x_center_max} Y{y_center_max} F{speed*60}
                G0 X{x_center_max} Y{y_center_min} F{speed*60}
        {% endfor %}

        # Re-home and get position again for comparison:
        G28 X Y
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION
        
        { action_respond_info("Test ended for {start_accel + accel_step * i} mm/s^2, at {speed} mm/s") }
        
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel}

    # Re-home and get position again for comparison:
    G28
    G4 P1000 
    GET_POSITION
    
    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED